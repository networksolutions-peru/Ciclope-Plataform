<script type="text/javascript">
function SetupQuery()
{
	top.frames.DocNav.total_hits=0;
	top.frames.DocNav.current_hit=-1;
//	OpenHitList();
}

function getDomain()
{
	// get from the contents window
	var contents_window = top.frames["contents"];
	return contents_window.getDomain();
}

function cancelQuery()
{
	parent.setMainTab("document");			
	location = "#!-- #TEMPLATES:document-frameset.htm --#";
}

function countQueryTerms(term_list)
{
	if (term_list == "")
	{
		return 0;
	}
	
	term_count = 1;

	last_index = 0;
	while (last_index != -1 && last_index < term_list.length)
	{
		new_index = term_list.indexOf(" ", last_index);

		// count adjacent spaces only once
		if (new_index - last_index >= 1)
		{
			term_count++;
		}

		last_index = (new_index == -1) ? new_index : new_index + 1;
	}

	return term_count;
}


function submitQuery()
{
	var positive_terms = "";
	var negative_terms = "";
	var rank_terms = "";
	
	var ui = document.ui_form;
	var request = document.request_form;

	// 'and' terms
	if (ui.and.value != "")
	{
		var and_input = ui.and.value;
		positive_terms += "[and:" + and_input + "]";
		rank_terms += and_input + " ";
	}

	// 'not' terms
	if (ui.not.value != "")
	{
		var not_input = ui.not.value;
		negative_terms += "[not:[or:" + not_input + "]]";
	}

	// 'or' terms
	if (ui.or.value != "")
	{
		var or_input = ui.or.value;
		positive_terms += "[or:" + or_input + "]";
		rank_terms += or_input + " ";
	}

	// phrase terms
	if (ui.phrase.value != "")
	{
		var phrase_input = ui.phrase.value;
		positive_terms += "[orderedprox,0:" + phrase_input + "]";
		rank_terms += "[orderedprox,0:" + phrase_input + "]";
	}

	// proximity terms
	if (ui.prox.value != "")
	{
		var proximity_input = ui.prox.value;
		
		// The "proximity window" is the range that determines whether
		// query terms are near each other. We make this dynamic based
		// on the number of words the user is looking for.
		prox_window = countQueryTerms(ui.prox.value) * 10;
		positive_terms += "[windowprox," + prox_window + ':' + proximity_input + ']';
		rank_terms += "[windowprox," + prox_window + ':' + proximity_input + ']';
	}

	// stemming
	var stem_positive = "";
	var stem_rank = "";
	if (ui.stemming.checked && positive_terms != "")
	{
		stem_positive = "[stem:" + positive_terms + "]";
		stem_rank = "[stem:" + rank_terms + "]";
	}
	
	// thesaurus
	var thesaurus_positive = "";
	var thesaurus_rank = "";
	if (ui.thesaurus.checked && positive_terms != "")
	{
		thesaurus_positive = "[thesaurus:" + positive_terms + "]";
		thesaurus_rank = "[thesaurus:" + rank_terms + "]";
	}

	// combine stemming/thesaurus
	if (stem_positive != "")
	{
		positive_terms = stem_positive + ((thesaurus_positive != "") ? thesaurus_positive : "");
	}
	else if (thesaurus_positive != "")
	{
		positive_terms = thesaurus_positive;
	}

	if (stem_rank != "")
	{
		rank_terms = stem_rank + ((thesaurus_rank != "") ? thesaurus_rank : "");
	}
	else if (thesaurus_rank != "")
	{
		rank_terms = thesaurus_rank;
	}

	// put everything together
	var query = "";	
	if (positive_terms != "")
	{
		query = "[rank,100:" + "[domain:[or:" + positive_terms + negative_terms + "]][sum:" + rank_terms + ']]';

		//request.xhitlist_s.value = "relevance-weight";
	}
	else if (negative_terms != "")
	{
		query = negative_terms;
	}

	// set the variables in the other form (the one that will be submitted)
	query ="[Field,tipo_norma:Ley]&"+query;
	alert(query);
	request.xhitlist_q.value = query;

	// kwic
	if (ui.kwic.options[ui.kwic.selectedIndex].value != 0)
	{
		selected_index = ui.kwic.selectedIndex;
		/*
		var sorting = request.xhitlist_hc.value;

		request.xhitlist_hc.value = "[XML][kwic," + 
			ui.kwic.options[selected_index].value + 
			"]" +
			sorting;
		*/
		request.xhitlist_hc.value = "[XML][kwic," + 
			ui.kwic.options[selected_index].value + 
			"]";
		
		if (request.xhitlist_sel.value.indexOf("hit-context") == -1)
			request.xhitlist_sel.value += ";hit-context";
	}
	else
		request.xhitlist_hc.value = "";

	// domain (this function is in searchform.htm)
	//request.xhitlist_d.value = getDomain();

	if (query != "")
	{
		SetupQuery();
		request.submit();
	}
	else
	{
		alert("Complete algun campo.");
	}
}

</script>
<style>
		a:link {
	text-decoration: none;
}
a:visited {
	text-decoration: none;
}
a:hover {
	text-decoration: underline;
}
a:active {
	text-decoration: none;
}
</style>
<body  style="margin-top:-6px;">
<table width="100%" border="0" cellspacing="0">
   <tr>
	<td><table width="100%" border="0" cellpadding="0" cellspacing="5" bgcolor="003399">
      <tr>
        <td><a href="#!-- #TEMPLATES:form_busqueda/legislacion.htm --#?pais=Argentina"><strong><font size="2" face="Verdana, Arial, Helvetica, sans-serif" color="#FFFFff" decoration="underline">B&uacute;squeda en Legislacion</font></strong></a></td>
      </tr>
    </table>	  </td>
	<BR><BR>
  </tr>
</table>
<table width="100%" border="0" cellspacing="0">
  <tr>
	<td><table width="100%" border="0" cellpadding="0" cellspacing="5" bgcolor="003399">
      <tr>
        <td><strong><font size="2" face="Verdana, Arial, Helvetica, sans-serif" color="#FFFFff" decoration="underline">B&uacute;squeda Avanzada</font></strong></td>
      </tr>
    </table></td>
	<BR><BR>
  </tr>
</table>
<font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br />
<form name="ui_form" onSubmit="submitQuery(); return false;" target="HitList">

	Buscar Documentos:<br /><br />

<font size="1" face="Verdana, Arial, Helvetica, sans-serif">
	<label for="and" accesskey="a">que contengan <strong>todas</strong> estas palabras</label><br>
	<input id="and" name="and" size="40" class="control"><br>
	<label for="not" accesskey="n">que <strong>no</strong> contengan ninguna de estas palabras:</label><br>
	<input id="not" name="not" size="40" class="control"><br>
	<label for="or" accesskey="o">que contengan <strong>una o m&aacute;s</strong> de estas palabras:</label><br>
	<input id="or" name="or" size="40" class="control"><br>
	<label for="phrase" accesskey="p">que contengan esta <strong>frase exacta</strong>:</label><br>
	<input id="phrase" name="phrase" size="40" class="control"><br>
	<label for="prox" accesskey="r">que contengan estas palabras <strong>cerca</strong> :</label><br>
	<input id="prox" name="prox" size="40" class="control"><br>
	<input id="stemming" name="stemming" type="checkbox" checked><label for="stemming" accesskey="s">Encontrar formas alternativas de las palabras (familia de palabras)</label><br>
	<input id="thesaurus" name="thesaurus" type="checkbox"><label for="thesaurus" accesskey="t">Encontrar sin&oacute;nimos (tesauro)</label><br>
	<label for="kwic" accesskey="e">Ver Resumen&nbsp;</label>
	<select id="kwic" name="kwic" size="1" class="control">
		<option value="0" selected>No</option>
		<option value="5">Corto</option>
		<option value="10">Medio</option>
		<option value="25">Largo</option>
	</select>
</font>
	<p>
		<input type="submit" value="Buscar" class="button">&nbsp;&nbsp;
		<input type="button" value="Cancelar" onClick="cancelQuery()" class="button">
	</p>
</form>

<form name="request_form" action="#!-- #EXECUTIVE:SCRIPT_NAME --#" method="get" target="HitList">
	<input type="hidden" size="0" name="f" value="xhitlist">
	<input type="hidden" size="0" name="xhitlist_q" value="">
	<input type="hidden" size="0" name="xhitlist_x"	value="Server">
	<input type="hidden" size="0" name="xhitlist_s"	value="">
	<input type="hidden" size="0" name="xhitlist_hc" value="">
	<input type="hidden" size="0" name="xhitlist_d" value="">
	<input type="hidden" size="0" name="xhitlist_xsl" value="xhitlist.xsl">
	<input type="hidden" size="0" name="xhitlist_vpc" value="first"/>
	<input type="hidden" size="0" name="xhitlist_sel" value="title;path;content-type;home-title">
</form>
</font>
</body>